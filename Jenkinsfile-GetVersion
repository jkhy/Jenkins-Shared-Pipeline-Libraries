pipeline {
    agent any
    environment {
        PROJECT_VERSION = get_version('master') 
    }
    stages {
        stage('Test Versions') {            
            parallel {

 // Template for testing
 // - Master Branch  - 3.17.12.BUILD_NUMBER = 3.17.19.0
 // - Hotfix Branch  - *.**.**.BUILD_NUMBER = 3.17.19.1
 // - Release Branch - *.**.+1.BUILD_NUMBER = 3.17.20.1
 // - Develop Branch - *.+1.+1.BUILD_NUMBER = 3.18.20.1
 // - Feature Branch -+1.+1.+1.BUILD_NUMBER = 4.18.20.1

                stage('Test master branch') {
                    steps {                        
                        script{		
                            if(get_version('master') != "3.17.19.${BUILD_NUMBER}"){
                                error 'Not Correct Version for master branch!!'
                            }     
                        }                  
                    }
                }
                stage('Test hotfix branch') {
                    steps {                        
                        script{		
                            if(get_version('hotfix/lv-666') != "3.17.19.${BUILD_NUMBER}"){
                                error 'Not Correct Version for hotfix branch!'
                            }     
                        }                  
                    }
                }
                stage('Test release branch') {
                    steps {                        
                        script{		
                            if(get_version('release/3.17.20') != "3.17.20.${BUILD_NUMBER}"){
                                error 'Not Correct Version for release branch!'
                            }     
                        }                  
                    }
                }
                stage('Test develop branch') {
                    steps {                        
                        script{		
                            if(get_version('develop') != "3.18.20.${BUILD_NUMBER}"){
                                error 'Not Correct Version for develop branch!'
                            }     
                        }                  
                    }
                }
                stage('Test feature branch') {
                    steps {                        
                        script{		
                            if(get_version('feature/lv-333') != "4.18.20.${BUILD_NUMBER}"){
                                error 'Not Correct Version for feature branch!'
                            }     
                        }                  
                    }
                }
            }
        }
    }
}