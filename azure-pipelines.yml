# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Set Versions
  inputs:
    targetType: 'inline'
    workingDirectory: '$(Build.SourcesDirectory)'
    script: |
     $MasterVersion= Get-Content $(Build.SourcesDirectory)/resources/master_version -Raw
     $DevelopVersion=$MasterVersion.Split('.')[0]+'.'+ ([int]$MasterVersion.Split('.')[1] + 1) +'.'+ $MasterVersion.Split('.')[2]
     Write-Host $MasterVersion
     Write-Host $DevelopVersion
     Write-Host "##vso[task.setvariable variable=MasterVar]$MasterVersion"
     Write-Host "##vso[task.setvariable variable=DevelopVar]$DevelopVersion"
     $MasterVersion | Out-File $(Build.SourcesDirectory)/MasterVersion.txt
     $DevelopVersion | Out-File $(Build.SourcesDirectory)/DevelopVersion.txt

- task: Update MasterVersion
  inputs:
    azureSubscriptionEndpoint: 'KVAzure'
    resourceGroupName: 'VSG-DEV'
    keyVaultName: 'VersionsKV'
    secretName: 'MasterVersion'
    secretValue: '$(MasterVar)'

- task: Update DevelopVersion
  inputs:
    azureSubscriptionEndpoint: 'KVAzure'
    resourceGroupName: 'VSG-DEV'
    keyVaultName: 'VersionsKV'
    secretName: 'DevelopVersion'
    secretValue: '$(DevelopVar)'
- task: CopyFiles@2
  inputs:
     Contents: '$(Build.SourcesDirectory)/*.txt'
     TargetFolder: '$(Build.ArtifactStagingDirectory)'
     flattenFolders: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    